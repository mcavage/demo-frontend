box: node
build:
  steps:
    - npm-install

docker-push:
  steps:
    - internal/docker-push:
        tag: ${WERCKER_GIT_BRANCH}-${WERCKER_GIT_COMMIT}
        cmd: npm start
        ports: 8080
        working-dir: $WERCKER_ROOT

deploy:
  steps:
    - bash-template:
        cwd: $WERCKER_ROOT/kubernetes

    - script:
        name: show kube yaml
        code: |
          cat $WERCKER_ROOT/kubernetes/deployment.yml

    - kubectl:
        server: $KUBERNETES_MASTER
        username: $KUBERNETES_USERNAME
        token: $KUBERNETES_PASSWORD
        insecure-skip-tls-verify: true
        command: apply -f $WERCKER_ROOT/kuberenetes/deployment.yml

    # - internal/docker-push:
    #     username: $DOCKERHUB_USERNAME
    #     password: $DOCKERHUB_PASSWORD
    #     repository: $DOCKERHUB_REPO
    #     ports: 8080
    #     cmd: npm start
    #     working-dir: $WERCKER_ROOT
    #     tag: $WERCKER_GIT_COMMIT

# $ kubectl run frontend --replicas=5 --labels="run=load-balancer-example" --image=mcavage/demo-frontend:latest  --port=8080
# $ kubectl expose deployment frontend --type=LoadBalancer --name=crow-demo
# $ kubectl get services crow-demo
# $ kubectl set image deployment/frontend frontend=mcavage/demo-frontend:8ea96de119d320bdbd819b43d3487ba17ced076a
# $ kubectl rollout status deployment/frontend
